# Part 1 - Import modules
import pandas as pd
from matplotlib import pyplot as plt
import seaborn as sns
import numpy as np

# Optional - Choose style of graph background and how many columns show
# plt.style.use('ggplot')
# pd.set_option('max_columns', 25)

# Part 2 - import the dataset and explore
pokemon = pd.read_csv(r"C:\Users\Chris\PycharmProjects\Projects\DA_Projects\pokemon\Pokemon.csv",index_col=False)
# print(pokemon.head(10))
# print(pokemon.tail(10))
# print(pokemon.columns)
# print(pokemon.shape)
# print(pokemon.dtypes)
# print((pokemon.describe()))
# print(pokemon.isna().sum())
# print(pokemon.loc[pokemon.duplicated()])

# Part 3 - Cleaning the Data
# print(pokemon.columns)
# print(pokemon.head(10))
# pokemon.rename({'#': 'Number'},axis=1,inplace=True)
# pokemon = pokemon.set_index('Number')
# pokemon.drop('Legendary', inplace=True, axis=1)
# pokemon = pokemon[pokemon['Name'].str.contains("Mega") == False]
# print(pokemon.columns)
# print(pokemon.head(10))


# Part 4 - Seeing how many pokemon are in each region
# ax = pokemon.groupby('Generation') \
#             .size() \
#             .plot(kind='bar',
#                   title='Number of Pokemon Per Generation')
# ax.set_xlabel('Generation')
# ax.set_ylabel('Number of Pokemon')
# plt.show()


# Part 5 - Viewing the distribution of the Attack Stat
# ax = pokemon['Attack'].plot(kind='hist',
#                             bins=15,
#                             color='orange',
#                             title='Pokemon Attack Distribution',
#                             edgecolor='black')
# atk_mean = np.mean(pokemon['Attack'])
# atk_st_dev = np.std(pokemon['Attack'])
# ax.axvline(atk_mean,color='red',label='Mean')
# ax.axvline(atk_st_dev,color='blue',label='Standard Deviation')
# ax.legend()
# ax.set_xlabel('Attack')
# plt.show()

sns.kdeplot(pokemon['Attack'],color='gold',fill=True,edgecolor='purple')
Q1 = np.quantile(pokemon['Attack'],.25)
Q2 = np.quantile(pokemon['Attack'],.50)
Q3 = np.quantile(pokemon['Attack'],.75)
plt.axvline(Q1,color='black',linestyle='dotted',label='Quantile 1')
plt.axvline(Q2,color='black',linestyle='dashed',label='Quantile 2')
plt.axvline(Q3,color='black',linestyle='-.',label='Quantile 3')
plt.title('Pokemon Attack Distribution')
plt.xlabel('Attack Stat')
plt.legend()
plt.show()


# Part 6 - Viewing the correlation between all stats
# sns.pairplot(pokemon,vars=['Attack','Defense','Sp. Atk','Sp. Def','Speed'],hue='Generation')
# plt.show()
#
# pokemon_corr = pokemon[['HP','Attack','Defense','Sp. Atk','Sp. Def','Speed']].corr()
# sns.heatmap(pokemon_corr,annot=True)
# plt.title('Correlation between Pokemon Stats')
# plt.show()


# Part 7 - Which type is more likely to have an above average attack stat?
# avg_atk = pokemon['Attack'].mean().round(2)
# pokemon_agg = pokemon.groupby('Type 1') \
#                      .agg(Attack = ('Attack','mean')) \
#                      .round(2) \
#                      .reset_index()
# pokemon_agg['Hex Color'] = ['#A6B91A','#705746','#6F35FC','#F7D02C','#D685AD','#C22E28','#EE8130','#A98FF3','#735797','#7AC74C','#E2BF65','#96D9D6','#A8A77A','#A33EA1','#F95587','#B6A136','#B7B7CE','#6390F0']
# plt.barh(pokemon_agg['Type 1'],pokemon_agg['Attack'],color=pokemon_agg['Hex Color'])
# plt.axvline(x=avg_atk,color='black',linestyle='dashed',label='Average Attack Stat')
# plt.xlabel('Pokemon Type')
# plt.ylabel('Attack Stat')
# plt.legend()
# plt.show()
